{"name":"Node-google-checkout","body":"#node-google-checkout\r\n\r\nA Google Checkout API implementation for node.js\r\n\r\n##Status\r\n\r\nThis API is currently working in the sandbox environment. I am working on documentation.\r\n\r\n##Dependencies\r\n\r\n - sanitizer version 0.0.15\r\n - request version 2.9.153\r\n - xml2js version 0.1.13\r\n\r\n-----------\r\n\r\n#GoogleCheckout(settings)\r\nThe `GoogleCheckout` constructor function.\r\n\r\n__settings__ - An object of settings\r\n\r\n\r\nThis is the main constructor function and where all of the magic starts.\r\nOnce you have an instance of `GoogleCheckout` you have access to all of\r\nthe following submodules\r\n\r\n* ShoppingCart - `GoogleCheckout.createCart()`\r\n* MerchantCalculations - `GoogleCheckout.MerchantCalculations`\r\n* Notification - `GoogleCheckout.Notification`\r\n* Polling - `GoogleCheckout.Polling`\r\n* OrderProcessing - `GoogleCheckout.OrderProcessing`\r\n* OrderReporting - `GoogleCheckout.OrderReporting`\r\n\r\nSettings\r\n\r\n```javascript\r\nsettings = {\r\n\tmerchantNumber : 'YOUR MERCHANT NUMBER',\r\n\tmerchantKey : 'YOUR MERCHANT KEY',\r\n\tcurrency : 'YOUR CURRENCY - LIKE USD',\r\n\ttimeZone : 'America/New_York',\r\n\tmerchantCalculationsUrl : 'http://yoursite.com/merchant-callback-url',\r\n\tmerchantCalculationsAcceptCoupons : false,\r\n\tmerchantCalculationsAcceptGiftCertifications : false,\r\n\tmerchantCalculationsShipping : false\r\n}\r\n```\r\n\r\n- __merchantNumber__ : your merchant number obtained from Google\r\n- __merchantKey__ : your merchant key obtained from Google\r\n- __currency__ : the default currency for your site. If you have this set, you can ignore\r\n  setting this value in methods that have it as an argument.\r\n- __timeZone__ : your time zone\r\n- __merchantCalculationsUrl__ : if you want to use merchant calculations, specify your callback url here.\r\n  Default: `null`\r\n- __merchantCalculationsAcceptCoupons__ : if you accept coupons and want to process them in your merchant \r\n  calculations callback, then set this value to `true`. Default: `false`\r\n- __merchantCalculationsAcceptGiftCertifications__ : if you accept gift certificats and want to process\r\n  them in your merchant calculations callback, then set this value to `true`. Default: `false`\r\n- __merchantCalculationsShipping__ : if you want to calculate the shipping rates in your merchant\r\n  calculations callback, then set this value to `true`. Default: `false`\r\n\r\nExample\r\n\r\n```javascript\r\nvar gc = new GoogleCheckout({\r\n\tmerchantNumber : '12345612345',\r\n\tmerchantKey : '234543254345345',\r\n\tcurrency : 'USD',\r\n\ttimeZone : 'America/New_York'\r\n});\r\n```\r\n\r\n###.createCart(callback)\r\nCreate a new instance of `ShoppingCart`\r\n\r\n\r\n__callback__ - \r\n\r\n\r\n\r\n###.postXML(url, xml, callback)\r\nPost `xml` to `url` via an HTTP request.\r\n\r\n__url__ - \r\n\r\n__xml__ - \r\n\r\n__callback__ - \r\n\r\n\r\nBefore being used, `url` is processed by replacing '{merchantNumber}' \r\nand '{merchantKey}' with `settings.merchantNumber` and \r\n`settings.merchantKey` respectively.\r\n\r\n###.parseXML(xml, callback)\r\nParse a string of XML and convert it to a JavaScript object.\r\n\r\n__xml__ - \r\n\r\n__callback__ - \r\n\r\n\r\nThis function processes a string of XML and converts it to\r\na JavaScript object. Google's XML tags consistently replace\r\nspaces with '-'. We replace each '-' and the following character\r\nwith just the capitalized character which follows the '-' by using\r\nthe `camelCaseObjectKeys()` function.\r\n\r\nThis gives us consistent camel case objects returned from Google.\r\n\r\n\r\n-----------\r\n\r\n#ShoppingCart(GoogleCheckout)\r\nThe `ShoppingCart` module provides methods for adding items, adding shipping options\r\nand submitting a shopping cart to Google. After submitting the shopping cart to \r\nGoogle, you will receive a URL to redirect your user to.\r\n\r\n__GoogleCheckout__ - A GoogleCheckout instance object.\r\n\r\n\r\nThere is no point in calling the constructor manually. You can get an\r\ninstance of `ShoppingCart` like this\r\n\r\n```javascript\r\nvar gc = new GoogleCheckout(settings);\r\n\r\ngc.createCart(function (err, cart) {\r\n\t\r\n});\r\n```\r\n\r\nHere is a complete example of building a cart and pushing it to Google\r\n\r\n```javascript\r\nvar gc = new GoogleCheckout(settings);\r\n\r\ngc.createCart(function (err, cart) {\r\n\tcart.addItem({\r\n\t\tname : 'Crayons', \r\n\t\tdescription : '42 Assorted Crayons', \r\n\t\tunitPrice : 3.99, \r\n\t\tcurrency : 'USD', \r\n\t\tquantity : 1, \r\n\t\titem_id : 'CRAY42'\r\n\t});\r\n\t\r\n\tcart.addShipMethod({\r\n\t\tname : 'FedEx Ground',\r\n\t\tprice : 3.00,\r\n\t\tcurrency : 'USD'\r\n\t});\r\n\t\r\n\tcart.postCart(function (err, redirectUrl) {\r\n\t\tif (err) {\r\n\t\t\t//deal with the error\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tconsole.log(redirectUrl);\r\n\t});\r\n});\r\n```\r\n\r\n###.addItem(name, description, unitPrice, quantity, item_id, currency)\r\nAdd an item to the list of items currently in the shopping cart.\r\n\r\n__name__ - \r\n\r\n__description__ - \r\n\r\n__unitPrice__ - \r\n\r\n__quantity__ - \r\n\r\n__item_id__ - \r\n\r\n__currency__ - \r\n\r\n\r\nYou may optionally pass an ItemObject in place of Name. The ItemObject should\r\ncontain all the properties in the example listed below, with the exception of\r\nthe currency property. If the currency property is omitted, then the default\r\ncurrency will be used.\r\n\r\n```javascript\r\nItemObject = { \r\n\tname : '', \r\n\tdescription : '', \r\n\tunitPrice : 1.23, \r\n\tcurrency : '', \r\n\tquantity : 1, \r\n\titem_id : '' \r\n};\r\n```\r\n\r\nExample\r\n\r\n```javascript\r\nvar gc = new GoogleCheckout(settings);\r\n\r\ngc.createCart(function (err, cart) {\r\n\tcart.addItem({\r\n\t\tname : 'Crayons', \r\n\t\tdescription : '42 Assorted Crayons', \r\n\t\tunitPrice : 3.99, \r\n\t\tcurrency : 'USD', \r\n\t\tquantity : 1, \r\n\t\titem_id : 'CRAY42'\r\n\t});\r\n\r\n\t//or\r\n\r\n\tcart.addItem('Jug of Juice', 'The good juice, made from natural ingredients', 14.99, 1, 'GOODJUC', 'USD');\r\n});\r\n```\r\n\r\n###.addShipMethod(ShippingMethodObject)\r\nAdd a shipping option to the shopping cart\r\n\r\n__ShippingMethodObject__ - \r\n\r\n\r\n```javascript\r\nShipMethodObject = {\r\n\tname : '',\r\n\tprice : 1.23,\r\n\tcurrency : 'USD'\r\n};\r\n```\r\n\r\n```javascript\r\nvar gc = new GoogleCheckout(settings);\r\n\r\ngc.createCart(function (err, cart) {\r\n\tcart.addShipMethod({\r\n\t\tname : 'FedEx Ground',\r\n\t\tprice : 3.00,\r\n\t\tcurrency : 'USD'\r\n\t});\r\n\r\n\t//or\r\n\r\n\tcart.addShipMethod('UPS Ground', 3.00, 'USD');\r\n});\r\n```\r\n\r\n###.postCart(Callback, ReturnXML)\r\nBuild and post the shopping cart to Google\r\n\r\n__Callback__ - \r\n\r\n__ReturnXML__ - If specified, callback will be called with the XML that would be supplied to Google.\r\n\r\n\r\nExample\r\n\r\n```javascript\r\ncart.postCart(function (err, redirectUrl) {\r\n\tif (err) {\r\n\t\t//deal with the error\r\n\t\treturn;\r\n\t}\r\n\r\n\tconsole.log(redirectUrl);\r\n});\r\n```\r\n\r\nTODO\r\n\r\n- Tax Tables\r\n- Shipping Restrictions\r\n\r\nDocumentation\r\n\r\nhttp://code.google.com/apis/checkout/developer/Google_Checkout_XML_API.html#checkout_api\r\n\r\n\r\n-----------\r\n\r\n#OrderProcessing(GoogleCheckout)\r\nThe `OrderProcessing` module is used to charge and update order information\r\n\r\n__GoogleCheckout__ - a `GoogleCheckout` instance\r\n\r\n\r\nThere is no need to manually create an instance of this constructor function. Once you\r\nhave an instance of GoogleCheckout, you already have an instance...\r\n\r\nExample\r\n\r\n```javascript\r\nvar gc = new GoogleCheckout(settings);\r\n\r\ngc.OrderProcessing.chargeAndShipOrder(\r\n\t'1234569034'\r\n\t, 50.24\r\n\t, ['1Z2343452345234'\r\n\t, function (err, response) {\r\n\t\tif (err) {\r\n\t\t\t//deal with the error\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//process the response\r\n});\r\n```\r\n\r\n###.chargeAndShipOrder(googleOrderNumber, amount, trackingData, callback)\r\nCharge and Ship an order\r\n\r\n__googleOrderNumber__ - \r\n\r\n__amount__ - \r\n\r\n__trackingData__ - \r\n\r\n__callback__ - \r\n\r\n\r\nDocumentation\r\n\r\nhttp://code.google.com/apis/checkout/developer/Google_Checkout_XML_API_Financial_Commands.html#Charge_And_Ship_Order\r\n\r\n###.refundOrder(googleOrderNumber, amount, reason, comment, callback)\r\nRefund an order\r\n\r\n__googleOrderNumber__ - \r\n\r\n__amount__ - \r\n\r\n__reason__ - \r\n\r\n__comment__ - \r\n\r\n__callback__ - \r\n\r\n\r\nDocumentation\r\n\r\nhttp://code.google.com/apis/checkout/developer/Google_Checkout_XML_API_Financial_Commands.html#Refund_Order\r\n\r\n###.cancelOrder(googleOrderNumber, reason, comment, callback)\r\nCancel an order\r\n\r\n__googleOrderNumber__ - \r\n\r\n__reason__ - \r\n\r\n__comment__ - \r\n\r\n__callback__ - \r\n\r\n\r\nDocumentation\r\n\r\nhttp://code.google.com/apis/checkout/developer/Google_Checkout_XML_API_Financial_Commands.html#Cancel_Order\r\n\r\n###.authorizeOrder(googleOrderNumber, callback)\r\nAuthorize an order\r\n\r\n__googleOrderNumber__ - \r\n\r\n__callback__ - \r\n\r\n\r\nDocumentation\r\n\r\nhttp://code.google.com/apis/checkout/developer/Google_Checkout_XML_API_Financial_Commands.html#Authorize_Order\r\n\r\n###.addMerchantOrderNumber(googleOrderNumber, merchantOrderNumber, callback)\r\nAdd Merchant order number to an order\r\n\r\n__googleOrderNumber__ - \r\n\r\n__merchantOrderNumber__ - \r\n\r\n__callback__ - \r\n\r\n\r\nDocumentation\r\n\r\nhttp://code.google.com/apis/checkout/developer/Google_Checkout_XML_API_Order_Level_Shipping.html#Add_Merchant_Order_Number\r\n\r\n###.sendBuyerMessage(googleOrderNumber, message, sendEmail, callback)\r\nSend the buyer a message\r\n\r\n__googleOrderNumber__ - \r\n\r\n__message__ - \r\n\r\n__sendEmail__ - \r\n\r\n__callback__ - \r\n\r\n\r\nDocumentation\r\n\r\nhttp://code.google.com/apis/checkout/developer/Google_Checkout_XML_API_Order_Level_Shipping.html#Send_Buyer_Message\r\n\r\n###.shipItems(googleOrderNumber, items, sendEmail, callback)\r\nShip Items on an order\r\n\r\n__googleOrderNumber__ - \r\n\r\n__items__ - \r\n\r\n__sendEmail__ - \r\n\r\n__callback__ - \r\n\r\n\r\n```javascript \r\nitems = [\r\n\t{\r\n\t\titem_id : 123456,\r\n\t\ttrackingData : [\r\n\t\t\t{ carrier : 'UPS', trackingNumber : '55555555' },\r\n\t\t\t{ carrier : 'UPS', trackingNumber : '55555556' }\r\n\t\t]\r\n\t}\r\n];\r\n```\r\n\r\nDocumentation\r\n\r\nhttp://code.google.com/apis/checkout/developer/Google_Checkout_XML_API_Line_Item_Shipping.html#Ship_Items\r\n\r\n###.backorderItems(googleOrderNumber, items, sendEmail, callback)\r\nBackorder items on an order\r\n\r\n__googleOrderNumber__ - \r\n\r\n__items__ - an aray of `item_id`s\r\n\r\n__sendEmail__ - \r\n\r\n__callback__ - \r\n\r\n\r\nDocumentation\r\n\r\nhttp://code.google.com/apis/checkout/developer/Google_Checkout_XML_API_Line_Item_Shipping.html#Backorder_Items\r\n\r\n###.returnItems(googleOrderNumber, items, sendEmail, callback)\r\nReturn items on an order\r\n\r\n__googleOrderNumber__ - \r\n\r\n__items__ - an aray of `item_id`s\r\n\r\n__sendEmail__ - \r\n\r\n__callback__ - \r\n\r\n\r\nDocumentation\r\n\r\nhttp://code.google.com/apis/checkout/developer/Google_Checkout_XML_API_Line_Item_Shipping.html#Return_Items\r\n\r\n###.cancelItems(googleOrderNumber, items, sendEmail, reason, comment, callback)\r\nCancel items on an order\r\n\r\n__googleOrderNumber__ - \r\n\r\n__items__ - an aray of `item_id`s\r\n\r\n__sendEmail__ - \r\n\r\n__reason__ - \r\n\r\n__comment__ - \r\n\r\n__callback__ - \r\n\r\n\r\nDocumentation\r\n\r\nhttp://code.google.com/apis/checkout/developer/Google_Checkout_XML_API_Line_Item_Shipping.html#Cancel_Items\r\n\r\n###.resetItemsShippingInformation(googleOrderNumber, items, sendEmail, callback)\r\nReset shipping information for items on an order\r\n\r\n__googleOrderNumber__ - \r\n\r\n__items__ - an aray of `item_id`s\r\n\r\n__sendEmail__ - \r\n\r\n__callback__ - \r\n\r\n\r\nDocumentation\r\n\r\nhttp://code.google.com/apis/checkout/developer/Google_Checkout_XML_API_Line_Item_Shipping.html#Resetting_Shipping_Status\r\n\r\n###.processOrder(googleOrderNumber, callback)\r\nProcess an Order\r\n\r\n__googleOrderNumber__ - \r\n\r\n__callback__ - \r\n\r\n\r\nDocumentation\r\n\r\nhttp://code.google.com/apis/checkout/developer/Google_Checkout_XML_API_Order_Level_Shipping.html#Process_Order\r\n\r\n###.deliverOrder(googleOrderNumber, trackingData, callback)\r\nDeliver an order\r\n\r\n__googleOrderNumber__ - \r\n\r\n__trackingData__ - \r\n\r\n__callback__ - \r\n\r\n\r\n```javascript\r\ntrackingData = [\r\n\t{\r\n\t\tcarrier : 'UPS',\r\n\t\ttrackingNumber : '1Z2343452345234'\r\n\t}\r\n];\r\n```\r\n\r\nDocumentation\r\n\r\nhttp://code.google.com/apis/checkout/developer/Google_Checkout_XML_API_Order_Level_Shipping.html#Deliver_Order\r\n\r\n###.addTrackingData(googleOrderNumber, trackingData, callback)\r\nAdd tracking Data to an order\r\n\r\n__googleOrderNumber__ - \r\n\r\n__trackingData__ - \r\n\r\n__callback__ - \r\n\r\n\r\n```javascript\r\ntrackingData = [\r\n\t{\r\n\t\tcarrier : 'UPS',\r\n\t\ttrackingNumber : '1Z2343452345234'\r\n\t}\r\n];\r\n``` \r\n\r\nDocumentation\r\n\r\nhttp://code.google.com/apis/checkout/developer/Google_Checkout_XML_API_Order_Level_Shipping.html#Add_Tracking_Data\r\n\r\n###.archiveOrder(googleOrderNumber, callback)\r\nArchive an order\r\n\r\n__googleOrderNumber__ - \r\n\r\n__callback__ - \r\n\r\n\r\nDocumentation\r\n\r\nhttp://code.google.com/apis/checkout/developer/Google_Checkout_XML_API_Archiving_Commands.html#Archive_Order\r\n\r\n###.unarchiveOrder(googleOrderNumber, callback)\r\nUnarchive an order\r\n\r\n__googleOrderNumber__ - \r\n\r\n__callback__ - \r\n\r\n\r\n\r\nDocumentation\r\n\r\nhttp://code.google.com/apis/checkout/developer/Google_Checkout_XML_API_Archiving_Commands.html#Unarchive_Order\r\n\r\n###.orderListRequest\r\nhttp://code.google.com/apis/checkout/developer/Google_Checkout_XML_API_Order_Report_API.html#Sending_an_Order_Report_API_Request\r\n\r\n\r\n\r\n\r\n-----------\r\n\r\n#MerchantCalculations(objGoogleCheckout)\r\nInstantiate an instance of the GoogleCheckout MerchantCalculations prototype\r\n\r\n__objGoogleCheckout__ - an instance of a `GoogleCheckout` object object\r\n\r\n\r\n## Examples\r\n\r\n###.merchantCalculationCallback\r\n{\r\n\tshoppingCart : {\r\n\t\t//google-supplied shopping cart data\r\n\t},\r\n\taddresses : [\r\n\t\t{\r\n\t\t\tid : 'google-supplied-id',\r\n\t\t\tcountryCode : 'google-supplied-country-code',\r\n\t\t\tcity : 'google-supplied-city',\r\n\t\t\tregion : 'google-supplied-region',\r\n\t\t\tpostalCode : 'google-supplied-postal-code',\r\n\t\t\t\r\n\t\t\t//if callbacks enabled for shipping\r\n\t\t\tshippingName : 'google-supplied-shipping-name',\r\n\t\t\tshippingRate : 'REQUIRED',\r\n\t\t\tshippingCurrency : 'OPTIONAL-OR-USE-DEFAULT',\r\n\t\t\tshippable : 'REQUIRED',\r\n\t\t\t\r\n\t\t\t//if callbacks enabled for tax\r\n\t\t\ttotalTax : 'REQUIRED',\r\n\t\t\t\r\n\t\t\t//if callbacks enabled for merchantCodes\r\n\t\t\tmerchantCodes : [\r\n\t\t\t\t{\r\n\t\t\t\t\ttype : 'REQUIRED (coupon or gift-certificate) ',\r\n\t\t\t\t\tvalid : 'REQUIRED (true or false)',\r\n\t\t\t\t\tcalculatedAmount : 'REQUIRED',\r\n\t\t\t\t\tmessage: 'REQUIRED/OPTIONAL - idk'\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}\r\n\r\n\r\n\r\n\r\n-----------\r\n\r\n#Polling(objGoogleCheckout)\r\nInstantiate an instance of the GoogleCheckout Polling prototype\r\n\r\n__objGoogleCheckout__ - An instance of a GoogleCheckout object\r\n\r\n\r\n## Examples\r\n\r\n    var gc = new GoogleCheckout({ merchantNumber : '1234', merchantKey : 'ABCD', currency : 'USD'});\r\n    var p = new Polling(gc);\r\n\r\nThis is not really necessary though because an instance of GoogleCheckout contains\r\nan instance of Polling\r\n\r\n    var gc = new GoogleCheckout({ merchantNumber : '1234', merchantKey : 'ABCD', currency : 'USD'});\r\n\r\n    gc.Polling.on('newOrderNotification', function (order) {\r\n      console.log(order)\r\n    });\r\n\r\n    gc.Polling.run();\r\n\r\n## Continue Token Events\r\n\r\n- notificationDataTokenResponse - 'Raw'\r\n- continueToken\r\n\r\n\r\n## Notification Events\r\n\r\n- notificationDataResponse - 'Raw'\r\n- newOrderNotification\r\n- authorizationAmountNotification\r\n- riskInformationNotification\r\n- orderStateChangeNotification\r\n- chargeAmountNotification\r\n- refundAmountNotification\r\n- chargebackAmountNotification\r\n\r\n###.notificationDataTokenRequest(StartTime, Callback)\r\nRequest a _continueToken_ for polling\r\n\r\n__StartTime__ - \r\n\r\n__Callback__ - function\r\n\r\n\r\n## Documentation\r\n\r\nhttp://code.google.com/apis/checkout/developer/Google_Checkout_Beta_Polling_API.html#Submitting_a_notification-data-token-request\r\n\r\n###.notificationDataRequest(ContinueToken, Callback)\r\nRequest notification data\r\n\r\n__ContinueToken__ - The token retrieved from Google by `notificationDataTokenRequest`\r\n\r\n__Callback__ - function\r\n\r\n\r\nDocumentation: \r\n\r\nhttp://code.google.com/apis/checkout/developer/Google_Checkout_Beta_Polling_API.html#Submitting_a_notification-data-request\r\n\r\n###.run(ContinueToken)\r\nStart the timer to poll events from Google\r\n\r\n\r\n__ContinueToken__ - Optional - The token retrieved from Google by `notificationDataTokenRequest`\r\n\r\n","tagline":"A Google Checkout API implementation for node.js","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}